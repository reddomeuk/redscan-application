import React from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Progress } from '@/components/ui/progress';
import { Shield, BarChart, CheckCircle, FileText } from 'lucide-react';

const ActiveEngagements = ({ onRemove }) => {
  const mockEngagements = [
    { id: 1, title: 'Q4 Web App Test', status: 'In Progress', progress: 65 },
    { id: 2, title: 'API Security Review', status: 'Reporting', progress: 90 },
    { id: 3, title: 'Mobile App Assessment', status: 'Scoping', progress: 20 }
  ];

  return (
    <Card className="bg-slate-800/50 border-slate-700">
      <CardHeader>
        <CardTitle className="text-white flex items-center gap-2">
          <Shield className="w-5 h-5 text-blue-400" />
          Active Engagements
        </CardTitle>
      </CardHeader>
      <CardContent>
        <div className="space-y-4">
          {mockEngagements.map(eng => (
            <div key={eng.id}>
              <div className="flex justify-between items-center mb-1">
                <p className="text-sm font-medium text-white truncate">{eng.title}</p>
                <Badge variant="outline" className="text-xs">{eng.status}</Badge>
              </div>
              <Progress value={eng.progress} className="h-2" />
            </div>
          ))}
        </div>
      </CardContent>
    </Card>
  );
};

const FindingsSeverity = ({ onRemove }) => {
  const mockFindings = [
    { severity: 'Critical', count: 3, color: 'bg-red-500' },
    { severity: 'High', count: 8, color: 'bg-orange-500' },
    { severity: 'Medium', count: 15, color: 'bg-yellow-500' },
    { severity: 'Low', count: 5, color: 'bg-green-500' }
  ];

  return (
    <Card className="bg-slate-800/50 border-slate-700">
      <CardHeader>
        <CardTitle className="text-white flex items-center gap-2">
          <BarChart className="w-5 h-5 text-purple-400" />
          Pentest Findings by Severity
        </CardTitle>
      </CardHeader>
      <CardContent>
        <div className="space-y-3">
          {mockFindings.map(finding => (
            <div key={finding.severity} className="flex items-center justify-between">
              <div className="flex items-center gap-2">
                <div className={`w-3 h-3 rounded-full ${finding.color}`}></div>
                <span className="text-sm text-white">{finding.severity}</span>
              </div>
              <span className="text-sm font-bold text-white">{finding.count}</span>
            </div>
          ))}
        </div>
      </CardContent>
    </Card>
  );
};

const RetestEffectiveness = ({ onRemove }) => {
  const mockRetestData = {
    totalRetested: 25,
    verified: 18,
    stillPresent: 4,
    newFindings: 3,
    effectiveness: 72
  };

  return (
    <Card className="bg-slate-800/50 border-slate-700">
      <CardHeader>
        <CardTitle className="text-white flex items-center gap-2">
          <CheckCircle className="w-5 h-5 text-green-400" />
          Retest Effectiveness
        </CardTitle>
      </CardHeader>
      <CardContent>
        <div className="flex items-center justify-center mb-4">
          <div className="relative w-24 h-24">
            <svg className="w-full h-full transform -rotate-90" viewBox="0 0 36 36">
              <path
                className="text-slate-700"
                d="M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831"
                fill="none" stroke="currentColor" strokeWidth="2"
              />
              <path
                className="text-green-400"
                strokeDasharray={`${mockRetestData.effectiveness}, 100`}
                d="M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831"
                fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round"
              />
            </svg>
            <div className="absolute inset-0 flex items-center justify-center text-lg font-bold text-white">
              {mockRetestData.effectiveness}%
            </div>
          </div>
        </div>
        <div className="grid grid-cols-2 gap-2 text-xs">
          <div className="text-center">
            <div className="text-green-400 font-bold">{mockRetestData.verified}</div>
            <div className="text-slate-400">Fixed</div>
          </div>
          <div className="text-center">
            <div className="text-red-400 font-bold">{mockRetestData.stillPresent}</div>
            <div className="text-slate-400">Still Present</div>
          </div>
        </div>
      </CardContent>
    </Card>
  );
};

const LatestReports = ({ onRemove }) => {
  const mockReports = [
    { id: 1, title: 'Q3 Web App - Executive Summary', type: 'Executive', date: '2024-01-15' },
    { id: 2, title: 'API Security - Technical Report', type: 'Technical', date: '2024-01-10' },
    { id: 3, title: 'Mobile App - Retest Summary', type: 'Retest', date: '2024-01-08' }
  ];

  return (
    <Card className="bg-slate-800/50 border-slate-700">
      <CardHeader>
        <CardTitle className="text-white flex items-center gap-2">
          <FileText className="w-5 h-5 text-indigo-400" />
          Latest Reports
        </CardTitle>
      </CardHeader>
      <CardContent>
        <div className="space-y-3">
          {mockReports.map(report => (
            <div key={report.id} className="flex items-center justify-between p-2 bg-slate-900/50 rounded-lg">
              <div className="flex-1">
                <p className="text-sm font-medium text-white truncate">{report.title}</p>
                <p className="text-xs text-slate-400">{report.date}</p>
              </div>
              <Badge variant="outline" className="text-xs">
                {report.type}
              </Badge>
            </div>
          ))}
        </div>
      </CardContent>
    </Card>
  );
};

export default {
  ActiveEngagements,
  FindingsSeverity,
  RetestEffectiveness,
  LatestReports
};